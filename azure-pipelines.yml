trigger:
- master
- refs/tags/*

pr:
- master

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'

- powershell: |
    $manifest = Get-Content .\package.json | Out-String | ConvertFrom-Json
    $canBePacked = '$(Build.SourceBranch)'.StartsWith("refs/tags/v") -and '$(Build.Reason)' -ne 'PullRequest' -and '$(System.PullRequest.IsFork)' -ne $true
    Write-Host 'Can be Packed'
    Write-Host $canBePacked
    Write-Host 'Source branch'
    Write-Host '$(Build.SourceBranch)'.StartsWith("refs/tags/v")
    Write-Host 'Reason'
    Write-Host '$(Build.Reason)' -ne 'PullRequest' 
    Write-Host 'Forked'
    Write-Host '$(System.PullRequest.IsFork)' -ne $true
    if ($canBePacked) { 
        $version = $manifest.version
    }else{
        $version = $manifest.version + '+' + $Env:BUILD_SOURCEVERSION.Substring(0, 6)
    }
    Write-Host "##vso[task.setvariable variable=canBePacked]$canBePacked"
    Write-Host "##vso[build.updatebuildnumber]$version"
  displayName: Set variables

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm run build
  displayName: 'npm build'

- task: CopyFiles@2
  displayName: 'Copy dist to artifacts directory'
  inputs:
    SourceFolder: dist
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  condition: ne(variables['system.pullrequest.isfork'], true)
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dist'

- script: |
    'npm run release:cws'
  displayName: 'Command Line Script'
  env:
    CLIENT_ID: $(extension.clientId)
    CLIENT_SECRET: $(extension.clientSecret)
    REFRESH_TOKEN: $(extension.refreshToken)
    EXTENSION_ID: $(extension.id)
  condition: and(succeeded(), eq(variables['canBePacked'], true))
